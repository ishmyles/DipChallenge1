/*
Deployment script for Challenge101571963

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar LoadTestData "false"
:setvar DatabaseName "Challenge101571963"
:setvar DefaultFilePrefix "Challenge101571963"
:setvar DefaultDataPath "C:\Users\ishmyles\AppData\Local\Microsoft\VisualStudio\SSDT\Challenge101571963"
:setvar DefaultLogPath "C:\Users\ishmyles\AppData\Local\Microsoft\VisualStudio\SSDT\Challenge101571963"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                CURSOR_DEFAULT LOCAL 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET PAGE_VERIFY NONE,
                DISABLE_BROKER 
            WITH ROLLBACK IMMEDIATE;
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET TARGET_RECOVERY_TIME = 0 SECONDS 
    WITH ROLLBACK IMMEDIATE;


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE (QUERY_CAPTURE_MODE = AUTO, OPERATION_MODE = READ_WRITE) 
            WITH ROLLBACK IMMEDIATE;
    END


GO
PRINT N'Creating [dbo].[Category]...';


GO
CREATE TABLE [dbo].[Category] (
    [CatID]   INT           NOT NULL,
    [CatName] NVARCHAR (20) NULL,
    CONSTRAINT [PK_CATEGORY] PRIMARY KEY CLUSTERED ([CatID] ASC)
);


GO
PRINT N'Creating [dbo].[Customer]...';


GO
CREATE TABLE [dbo].[Customer] (
    [CustID]   NVARCHAR (10) NOT NULL,
    [FullName] NVARCHAR (20) NOT NULL,
    [Country]  NVARCHAR (20) NOT NULL,
    [City]     NVARCHAR (20) NOT NULL,
    [State]    NVARCHAR (15) NOT NULL,
    [PostCode] INT           NOT NULL,
    [SegID]    INT           NOT NULL,
    [Region]   NVARCHAR (10) NOT NULL,
    CONSTRAINT [PK_CUSTOMER] PRIMARY KEY CLUSTERED ([CustID] ASC)
);


GO
PRINT N'Creating [dbo].[CustOrder]...';


GO
CREATE TABLE [dbo].[CustOrder] (
    [CustID]    NVARCHAR (10) NOT NULL,
    [ProdID]    NVARCHAR (20) NOT NULL,
    [OrderDate] DATE          NOT NULL,
    [Quantity]  INT           NOT NULL,
    [ShipDate]  DATE          NULL,
    [ShipMode]  NVARCHAR (20) NOT NULL,
    CONSTRAINT [PK_ORDER] PRIMARY KEY CLUSTERED ([CustID] ASC, [ProdID] ASC, [OrderDate] ASC)
);


GO
PRINT N'Creating [dbo].[Product]...';


GO
CREATE TABLE [dbo].[Product] (
    [ProdID]      NVARCHAR (20) NOT NULL,
    [Description] NVARCHAR (60) NOT NULL,
    [UnitPrice]   MONEY         NOT NULL,
    [CatID]       INT           NOT NULL,
    CONSTRAINT [PK_PRODUCT] PRIMARY KEY CLUSTERED ([ProdID] ASC)
);


GO
PRINT N'Creating [dbo].[Region]...';


GO
CREATE TABLE [dbo].[Region] (
    [Region] NVARCHAR (10) NOT NULL,
    CONSTRAINT [PK_REGION] PRIMARY KEY CLUSTERED ([Region] ASC)
);


GO
PRINT N'Creating [dbo].[Segment]...';


GO
CREATE TABLE [dbo].[Segment] (
    [SegID]   INT           NOT NULL,
    [SegName] NVARCHAR (15) NOT NULL,
    CONSTRAINT [PK_SEGMENT] PRIMARY KEY CLUSTERED ([SegID] ASC)
);


GO
PRINT N'Creating [dbo].[Shipping]...';


GO
CREATE TABLE [dbo].[Shipping] (
    [ShipMode] NVARCHAR (20) NOT NULL,
    CONSTRAINT [PK_SHIPPING] PRIMARY KEY CLUSTERED ([ShipMode] ASC)
);


GO
PRINT N'Creating [dbo].[FK_CUSTOMER_SEGMENT]...';


GO
ALTER TABLE [dbo].[Customer] WITH NOCHECK
    ADD CONSTRAINT [FK_CUSTOMER_SEGMENT] FOREIGN KEY ([SegID]) REFERENCES [dbo].[Segment] ([SegID]);


GO
PRINT N'Creating [dbo].[FK_CUSTOMER_REGION]...';


GO
ALTER TABLE [dbo].[Customer] WITH NOCHECK
    ADD CONSTRAINT [FK_CUSTOMER_REGION] FOREIGN KEY ([Region]) REFERENCES [dbo].[Region] ([Region]);


GO
PRINT N'Creating [dbo].[FK_ORDER_CUSTOMER]...';


GO
ALTER TABLE [dbo].[CustOrder] WITH NOCHECK
    ADD CONSTRAINT [FK_ORDER_CUSTOMER] FOREIGN KEY ([CustID]) REFERENCES [dbo].[Customer] ([CustID]);


GO
PRINT N'Creating [dbo].[FK_ORDER_PRODUCT]...';


GO
ALTER TABLE [dbo].[CustOrder] WITH NOCHECK
    ADD CONSTRAINT [FK_ORDER_PRODUCT] FOREIGN KEY ([ProdID]) REFERENCES [dbo].[Product] ([ProdID]);


GO
PRINT N'Creating [dbo].[FK_ORDER_SHIPPING]...';


GO
ALTER TABLE [dbo].[CustOrder] WITH NOCHECK
    ADD CONSTRAINT [FK_ORDER_SHIPPING] FOREIGN KEY ([ShipMode]) REFERENCES [dbo].[Shipping] ([ShipMode]);


GO
PRINT N'Creating [dbo].[FK_PRODUCT_CAT]...';


GO
ALTER TABLE [dbo].[Product] WITH NOCHECK
    ADD CONSTRAINT [FK_PRODUCT_CAT] FOREIGN KEY ([CatID]) REFERENCES [dbo].[Category] ([CatID]);


GO
/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/

IF '$(LoadTestData)' = 'true'

BEGIN

DELETE FROM CustOrder;
DELETE FROM Shipping;
DELETE FROM Product;
DELETE FROM Customer;
DELETE FROM Category;
DELETE FROM Region;
DELETE FROM Segment;

INSERT INTO Segment(SegID, SegName) VALUES
(1, 'Consumer'),
(2, 'Corporate'),
(3, 'Home Office');

INSERT INTO Region(Region) VALUES
('South'),
('Central'),
('West'),
('East'),
('North');

INSERT INTO Category(CatID, CatName) VALUES
(1, 'Furniture'),
(2, 'Office Supplies'),
(3, 'Technology');

INSERT INTO Shipping(ShipMode) VALUES
('Second Class'),
('Standard Class'),
('First Class'),
('Overnight Express');

INSERT INTO Product(ProdID, Description, UnitPrice, CatID) VALUES
('FUR-BO-10001798', 'Bush Somerset Collection Bookcase', $261.96, 1),
('FUR-CH-10000454', 'Mitel 5320 IP Phone VoIP phone', $731.94, 3),
('OFF-LA-10000240', 'Self-Adhesive Address Labels for Typewriters by Universal', $14.62, 2);

INSERT INTO Customer(CustID, FullName, Country, City, State, PostCode, SegID, Region) VALUES
('CG-12520', 'Claire Gute', 'United States', 'Henderson', 'Oklahoma', 42420, 1, 'Central'),
('DV-13045', 'Darrin Van Huff', 'United States', 'Los Angeles', 'California', 42420, 2, 'West'),
('SO-20335', 'Sean ODonnell', 'United States', 'Fort Lauderdale', 'Florida', 42420, 1, 'South'),
('BH-11710', 'Brosina Hoffman', 'United States', 'Los Angeles', 'California', 42420, 3, 'West');

INSERT INTO CustOrder(CustID, ProdID, OrderDate, Quantity, ShipDate, ShipMode) VALUES
(
	'CG-12520', 'FUR-BO-10001798',
	CONVERT(DATE, '08/11/2016', 103),
	2,
	CONVERT(DATE, '11/11/2016', 103),
	'Second Class'
),

(
	'CG-12520', 'FUR-CH-10000454',
	CONVERT(DATE, '08/11/2016', 103),
	3,
	CONVERT(DATE, '11/11/2016', 103),
	'Second Class'
),

(
	'CG-12520', 'OFF-LA-10000240',
	CONVERT(DATE, '12/06/2016', 103),
	2,
	CONVERT(DATE, '16/06/2016', 103),
	'Second Class'
),

(
	'DV-13045', 'OFF-LA-10000240',
	CONVERT(DATE, '21/11/2015', 103),
	2,
	CONVERT(DATE, '26/11/2015', 103),
	'Second Class'
),

(
	'DV-13045', 'OFF-LA-10000240',
	CONVERT(DATE, '11/10/2014', 103),
	1,
	CONVERT(DATE, '15/10/2014', 103),
	'Standard Class'
),

(
	'DV-13045', 'FUR-CH-10000454',
	CONVERT(DATE, '12/11/2016', 103),
	9,
	CONVERT(DATE, '16/11/2016', 103),
	'Standard Class'
),

(
	'SO-20335', 'OFF-LA-10000240',
	CONVERT(DATE, '02/09/2016', 103),
	5,
	CONVERT(DATE, '08/09/2016', 103),
	'Standard Class'
),

(
	'SO-20335', 'FUR-BO-10001798',
	CONVERT(DATE, '25/08/2017', 103),
	2,
	CONVERT(DATE, '28/08/2017', 103),
	'Overnight Express'
),

(
	'SO-20335', 'FUR-CH-10000454',
	CONVERT(DATE, '22/06/2017', 103),
	2,
	CONVERT(DATE, '26/06/2017', 103),
	'Standard Class'
),

(
	'SO-20335', 'FUR-BO-10001798',
	CONVERT(DATE, '01/05/2017', 103),
	3,
	CONVERT(DATE, '02/05/2017', 103),
	'First Class'
);

END;
GO

GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [dbo].[Customer] WITH CHECK CHECK CONSTRAINT [FK_CUSTOMER_SEGMENT];

ALTER TABLE [dbo].[Customer] WITH CHECK CHECK CONSTRAINT [FK_CUSTOMER_REGION];

ALTER TABLE [dbo].[CustOrder] WITH CHECK CHECK CONSTRAINT [FK_ORDER_CUSTOMER];

ALTER TABLE [dbo].[CustOrder] WITH CHECK CHECK CONSTRAINT [FK_ORDER_PRODUCT];

ALTER TABLE [dbo].[CustOrder] WITH CHECK CHECK CONSTRAINT [FK_ORDER_SHIPPING];

ALTER TABLE [dbo].[Product] WITH CHECK CHECK CONSTRAINT [FK_PRODUCT_CAT];


GO
PRINT N'Update complete.';


GO
